@page "/"
@inject AuscultacioApi api
@inject LocalStorageService localStorage
@inject NavigationManager MyNavigationManager

<Card>
    <CardHeader>
        <header>
            <TextEdit @bind-Text="@api.Host" />
            <p>Variable: @VariableActual.codi</p>
        </header>
    </CardHeader>
    <CardBody>
    <Tabs SelectedTabChanged="@SelectedTab">
        <Tab Name="variables" IsActive="@VariablesVisible">Variables</Tab>
        <Tab Name="valors" IsActive="@ValorsVisible">Valors</Tab>
        <Tab Name="script" IsActive="@ScriptsVisible">Script</Tab>
    </Tabs>
    <TabsContent @ref="tabContent">
        <TabPanel Name="variables" IsActive="@VariablesVisible">
            <h3>VARIABLES</h3>
            <LlistaVariables OnSelectedVariable="@VariableSeleccionada" Visible="true"></LlistaVariables>
        </TabPanel>
        <TabPanel Name="valors" IsActive="@ValorsVisible">
            <h3>VALORS</h3>
            <Row>
                <Column>
                    <LlistaValors OnSelectedValor="@ValorSeleccionat" Variable="@VariableActual" />
                </Column>
                <Column>
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Data</th>
                                <th>Valor</th>
                                <th>Observacions</th>
                                <th>Tipus Estat</th>
                            </tr>
                        </thead>
                        @foreach (var valor in ValorsSeleccionats)
                        {
                            <tr>
                                <td>@valor.idValor</td>
                                <td>@valor.dataHoraValor</td>
                                <td>@valor.valor</td>
                                <td>@valor.observacions</td>
                                <td>@valor.tipusEstatValor</td>
                            </tr>
                        }
                    </table>
                </Column>
            </Row>
        </TabPanel>
        <TabPanel Name="script" IsActive="@ScriptsVisible">
            <table class="table table-sm">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Data</th>
                        <th>Valor</th>
                        <th>Observacions</th>
                        <th>Tipus Estat</th>
                    </tr>
                </thead>
                @foreach (var valor in ValorsSeleccionats)
                {
                    <tr>
                        <td>@valor.idValor</td>
                        <td>@valor.dataHoraValor</td>
                        <td>@valor.valor</td>
                        <td>@valor.observacions</td>
                        <td>@valor.tipusEstatValor</td>
                    </tr>
                }
            </table>
            <ScriptAuscultacio OnCalculatScript="@CalculatScript" Valors="@ValorsSeleccionats" TextScript="@ScriptActual"></ScriptAuscultacio>
        </TabPanel>
    </TabsContent>
    </CardBody>
</Card>

@code
{
    public Variable VariableActual { get; set; } = new Variable()
    {
        id = -1
    };

    public List<Valor> ValorsSeleccionats = new List<Valor>();

    bool VariablesVisible { get; set; }
    bool ValorsVisible { get; set; }
    bool ScriptsVisible { get; set; }
    bool inicialitzat = false;
    private string ScriptActual;

    private TabsContent tabContent;


    protected override async Task OnInitializedAsync()
    {
        if (!inicialitzat)
        {
            var uri = new UriBuilder(MyNavigationManager.Uri);
            //api.Host = uri.Host;

            var variable = await localStorage.GetItemAsync<Variable>("VariableAuscultacio");
            if (variable != null)
            {
                VariableActual = variable;
            }

            var valors = await localStorage.GetItemAsync<Valor[]>("ValorsAuscultacio");

            if (valors != null)
            {
                ValorsSeleccionats.AddRange(valors);
            }

            VariablesVisible = await localStorage.GetItemAsync<bool>("VariablesVisible");
            ValorsVisible = await localStorage.GetItemAsync<bool>("ValorsVisible");
            ScriptsVisible = await localStorage.GetItemAsync<bool>("ScriptsVisible");

            var script = await localStorage.GetItemAsync<string>("ScriptAuscultacio");

            if (script != null)
            {
                ScriptActual = script;
            }

            inicialitzat = true;
        }
    }

    private void SelectedTab(string tag)
    {
        switch (tag)
        {
            case "variables":
                ValorsVisible = false;
                ScriptsVisible = false;
                VariablesVisible = true;
                break;

            case "valors":
                ValorsVisible = true;
                VariablesVisible = false;
                ScriptsVisible = false;
                break;

            case "script":
                ScriptsVisible = true;
                ValorsVisible = false;
                VariablesVisible = false;
                break;
        }

        tabContent.SelectPanel(tag);

        localStorage.SetItem("VariablesVisible", VariablesVisible);
        localStorage.SetItem("ValorsVisible", ValorsVisible);
        localStorage.SetItem("ScriptsVisible", ScriptsVisible);

    }

    private void ValorSeleccionat(Valor v)
    {
        if (ValorsSeleccionats.Contains(v))
        {
            ValorsSeleccionats.Remove(v);
        }
        else
        {
            ValorsSeleccionats.Add(v);
        }

        ValorsSeleccionats.Sort();

        localStorage.SetItem("ValorsAuscultacio", ValorsSeleccionats.ToArray());
    }

    private void CalculatScript(string s)
    {
        localStorage.SetItem("ScriptAuscultacio", s);
    }

    private void VariableSeleccionada(Variable v)
    {
        VariableActual = v;

        ValorsSeleccionats.Clear();

        localStorage.SetItem("VariableAuscultacio", v);
        localStorage.SetItem("ValorsAuscultacio", new Valor[0]);
    }
}
